version: '3'

services:
  db:
    image: postgres:16.2
    container_name: app-postgres
    volumes:
      - ./database:/var/lib/postgresql/data
    env_file: 
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
    - "${POSTGRES_PORT}:5432"

  nginx:
      image: nginx:alpine
      container_name: app-nginx
      environment:
        - TZ=Europe/Moscow
      volumes:
        - ./backend:/var/www/backend
        - ./nginx/conf.d/:/etc/nginx/conf.d/
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        - ./frontend:/var/www/frontend
      ports:
        - 80:80

  app:
      container_name: app-backend
      build:
          context: ./backend
          dockerfile: ./Dockerfile
      volumes:
          - ./backend/:/var/www/backend
      working_dir: /var/www/backend
      environment:
          - TZ=Europe/Moscow

  frontend:
      container_name: app-frontend
      build:
        context: ./frontend
        dockerfile: ./Dockerfile
      ports:
        - "8080:8080"
      environment:
        - CHOKIDAR_USEPOLLING=true
      volumes:
        - ./frontend:/app
      command: npm run serve

  rabbitmq:
      container_name: app-rabbitmq
      env_file: 
        - .env
      image: rabbitmq:4-management
      hostname: ${RABBITMQ_HOSTNAME}
      environment:
        RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_PASSWORD}
        RABBITMQ_DEFAULT_PASSWORD: ${RABBITMQ_DEFAULT_PASSWORD}
        RABBITMQ_DEFAULT_VHOST: /
      volumes:
        - ./rabbitmq/data:/var/lib/rabbitmq
      ports:
        - ${RABBITMQ_CLI_PORT}:5672 # (erlang) communication between the nodes and CLI tool
        - ${RABBITMQ_WEB_PORT}:15672 # communication with the web management API     
